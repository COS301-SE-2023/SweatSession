{"version":3,"file":"default-node_modules_ngxs_form-plugin_fesm2015_ngxs-form-plugin_js.js","mappings":"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","sources":["./node_modules/@ngxs/form-plugin/fesm2015/ngxs-form-plugin.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Directive, Input, NgModule } from '@angular/core';\nimport * as i1 from '@ngxs/store';\nimport { getActionTypeFromInstance, setValue, getValue, ofActionDispatched, NGXS_PLUGINS } from '@ngxs/store';\nimport * as i2 from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil, distinctUntilChanged, debounceTime } from 'rxjs/operators';\n\nclass UpdateFormStatus {\n    constructor(payload) {\n        this.payload = payload;\n    }\n    static get type() {\n        // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n        return '[Forms] Update Form Status';\n    }\n}\nclass UpdateFormValue {\n    constructor(payload) {\n        this.payload = payload;\n    }\n    static get type() {\n        // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n        return '[Forms] Update Form Value';\n    }\n}\nclass UpdateForm {\n    constructor(payload) {\n        this.payload = payload;\n    }\n    static get type() {\n        // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n        return '[Forms] Update Form';\n    }\n}\nclass UpdateFormDirty {\n    constructor(payload) {\n        this.payload = payload;\n    }\n    static get type() {\n        // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n        return '[Forms] Update Form Dirty';\n    }\n}\nclass SetFormDirty {\n    constructor(payload) {\n        this.payload = payload;\n    }\n    static get type() {\n        // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n        return '[Forms] Set Form Dirty';\n    }\n}\nclass SetFormPristine {\n    constructor(payload) {\n        this.payload = payload;\n    }\n    static get type() {\n        // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n        return '[Forms] Set Form Pristine';\n    }\n}\nclass UpdateFormErrors {\n    constructor(payload) {\n        this.payload = payload;\n    }\n    static get type() {\n        // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n        return '[Forms] Update Form Errors';\n    }\n}\nclass SetFormDisabled {\n    constructor(payload) {\n        this.payload = payload;\n    }\n    static get type() {\n        // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n        return '[Forms] Set Form Disabled';\n    }\n}\nclass SetFormEnabled {\n    constructor(payload) {\n        this.payload = payload;\n    }\n    static get type() {\n        // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n        return '[Forms] Set Form Enabled';\n    }\n}\nclass ResetForm {\n    constructor(payload) {\n        this.payload = payload;\n    }\n    static get type() {\n        // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n        return '[Forms] Reset Form';\n    }\n}\n\nclass NgxsFormPlugin {\n    handle(state, event, next) {\n        const type = getActionTypeFromInstance(event);\n        let nextState = state;\n        if (type === UpdateFormValue.type || type === UpdateForm.type || type === ResetForm.type) {\n            const { value } = event.payload;\n            const payloadValue = Array.isArray(value)\n                ? value.slice()\n                : isObjectLike(value)\n                    ? Object.assign({}, value) : value;\n            const path = this.joinPathWithPropertyPath(event);\n            nextState = setValue(nextState, path, payloadValue);\n        }\n        if (type === ResetForm.type) {\n            const model = getValue(nextState, `${event.payload.path}.model`);\n            nextState = setValue(nextState, `${event.payload.path}`, { model: model });\n        }\n        if (type === UpdateFormStatus.type || type === UpdateForm.type) {\n            nextState = setValue(nextState, `${event.payload.path}.status`, event.payload.status);\n        }\n        if (type === UpdateFormErrors.type || type === UpdateForm.type) {\n            nextState = setValue(nextState, `${event.payload.path}.errors`, Object.assign({}, event.payload.errors));\n        }\n        if (type === UpdateFormDirty.type || type === UpdateForm.type) {\n            nextState = setValue(nextState, `${event.payload.path}.dirty`, event.payload.dirty);\n        }\n        if (type === SetFormDirty.type) {\n            nextState = setValue(nextState, `${event.payload}.dirty`, true);\n        }\n        if (type === SetFormPristine.type) {\n            nextState = setValue(nextState, `${event.payload}.dirty`, false);\n        }\n        if (type === SetFormDisabled.type) {\n            nextState = setValue(nextState, `${event.payload}.disabled`, true);\n        }\n        if (type === SetFormEnabled.type) {\n            nextState = setValue(nextState, `${event.payload}.disabled`, false);\n        }\n        return next(nextState, event);\n    }\n    joinPathWithPropertyPath({ payload }) {\n        let path = `${payload.path}.model`;\n        if (payload.propertyPath) {\n            path += `.${payload.propertyPath}`;\n        }\n        return path;\n    }\n}\n/** @nocollapse */ NgxsFormPlugin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsFormPlugin, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ NgxsFormPlugin.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsFormPlugin });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsFormPlugin, decorators: [{\n            type: Injectable\n        }] });\nfunction isObjectLike(target) {\n    return target !== null && typeof target === 'object';\n}\n\nclass FormDirective {\n    constructor(_actions$, _store, _formGroupDirective, _cd) {\n        this._actions$ = _actions$;\n        this._store = _store;\n        this._formGroupDirective = _formGroupDirective;\n        this._cd = _cd;\n        this.path = null;\n        this._debounce = 100;\n        this._clearDestroy = false;\n        this._updating = false;\n        this._destroy$ = new Subject();\n    }\n    set debounce(debounce) {\n        this._debounce = Number(debounce);\n    }\n    get debounce() {\n        return this._debounce;\n    }\n    set clearDestroy(val) {\n        this._clearDestroy = val != null && `${val}` !== 'false';\n    }\n    get clearDestroy() {\n        return this._clearDestroy;\n    }\n    ngOnInit() {\n        this._actions$\n            .pipe(ofActionDispatched(ResetForm), filter((action) => action.payload.path === this.path), takeUntil(this._destroy$))\n            .subscribe(({ payload: { value } }) => {\n            this.form.reset(value);\n            this.updateFormStateWithRawValue(true);\n            this._cd.markForCheck();\n        });\n        this.getStateStream(`${this.path}.model`).subscribe(model => {\n            if (this._updating || !model) {\n                return;\n            }\n            this.form.patchValue(model);\n            this._cd.markForCheck();\n        });\n        this.getStateStream(`${this.path}.dirty`).subscribe(dirty => {\n            if (this.form.dirty === dirty || typeof dirty !== 'boolean') {\n                return;\n            }\n            if (dirty) {\n                this.form.markAsDirty();\n            }\n            else {\n                this.form.markAsPristine();\n            }\n            this._cd.markForCheck();\n        });\n        // On first state change, sync form model, status and dirty with state\n        this._store\n            .selectOnce(state => getValue(state, this.path))\n            .subscribe(() => {\n            this._store.dispatch([\n                new UpdateFormValue({\n                    path: this.path,\n                    value: this.form.getRawValue()\n                }),\n                new UpdateFormStatus({\n                    path: this.path,\n                    status: this.form.status\n                }),\n                new UpdateFormDirty({\n                    path: this.path,\n                    dirty: this.form.dirty\n                })\n            ]);\n        });\n        this.getStateStream(`${this.path}.disabled`).subscribe(disabled => {\n            if (this.form.disabled === disabled || typeof disabled !== 'boolean') {\n                return;\n            }\n            if (disabled) {\n                this.form.disable();\n            }\n            else {\n                this.form.enable();\n            }\n            this._cd.markForCheck();\n        });\n        this._formGroupDirective\n            .valueChanges.pipe(distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)), this.debounceChange())\n            .subscribe(() => {\n            this.updateFormStateWithRawValue();\n        });\n        this._formGroupDirective\n            .statusChanges.pipe(distinctUntilChanged(), this.debounceChange())\n            .subscribe((status) => {\n            this._store.dispatch(new UpdateFormStatus({\n                status,\n                path: this.path\n            }));\n        });\n    }\n    updateFormStateWithRawValue(withFormStatus) {\n        if (this._updating)\n            return;\n        const value = this._formGroupDirective.control.getRawValue();\n        const actions = [\n            new UpdateFormValue({\n                path: this.path,\n                value\n            }),\n            new UpdateFormDirty({\n                path: this.path,\n                dirty: this._formGroupDirective.dirty\n            }),\n            new UpdateFormErrors({\n                path: this.path,\n                errors: this._formGroupDirective.errors\n            })\n        ];\n        if (withFormStatus) {\n            actions.push(new UpdateFormStatus({\n                path: this.path,\n                status: this._formGroupDirective.status\n            }));\n        }\n        this._updating = true;\n        this._store.dispatch(actions).subscribe({\n            error: () => (this._updating = false),\n            complete: () => (this._updating = false)\n        });\n    }\n    ngOnDestroy() {\n        this._destroy$.next();\n        if (this.clearDestroy) {\n            this._store.dispatch(new UpdateForm({\n                path: this.path,\n                value: null,\n                dirty: null,\n                status: null,\n                errors: null\n            }));\n        }\n    }\n    debounceChange() {\n        const skipDebounceTime = this._formGroupDirective.control.updateOn !== 'change' || this._debounce < 0;\n        return skipDebounceTime\n            ? (change) => change.pipe(takeUntil(this._destroy$))\n            : (change) => change.pipe(debounceTime(this._debounce), takeUntil(this._destroy$));\n    }\n    get form() {\n        return this._formGroupDirective.form;\n    }\n    getStateStream(path) {\n        return this._store.select(state => getValue(state, path)).pipe(takeUntil(this._destroy$));\n    }\n}\n/** @nocollapse */ FormDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: FormDirective, deps: [{ token: i1.Actions }, { token: i1.Store }, { token: i2.FormGroupDirective }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ FormDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"12.2.17\", type: FormDirective, selector: \"[ngxsForm]\", inputs: { path: [\"ngxsForm\", \"path\"], debounce: [\"ngxsFormDebounce\", \"debounce\"], clearDestroy: [\"ngxsFormClearOnDestroy\", \"clearDestroy\"] }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: FormDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngxsForm]' }]\n        }], ctorParameters: function () { return [{ type: i1.Actions }, { type: i1.Store }, { type: i2.FormGroupDirective }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { path: [{\n                type: Input,\n                args: ['ngxsForm']\n            }], debounce: [{\n                type: Input,\n                args: ['ngxsFormDebounce']\n            }], clearDestroy: [{\n                type: Input,\n                args: ['ngxsFormClearOnDestroy']\n            }] } });\n\nclass NgxsFormPluginModule {\n    static forRoot() {\n        return {\n            ngModule: NgxsFormPluginModule,\n            providers: [\n                {\n                    provide: NGXS_PLUGINS,\n                    useClass: NgxsFormPlugin,\n                    multi: true\n                }\n            ]\n        };\n    }\n}\n/** @nocollapse */ NgxsFormPluginModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsFormPluginModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ NgxsFormPluginModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsFormPluginModule, declarations: [FormDirective], imports: [ReactiveFormsModule], exports: [FormDirective] });\n/** @nocollapse */ NgxsFormPluginModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsFormPluginModule, imports: [[ReactiveFormsModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsFormPluginModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ReactiveFormsModule],\n                    declarations: [FormDirective],\n                    exports: [FormDirective]\n                }]\n        }] });\n\n/**\n * The public api for consumers of @ngxs/form-plugin\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxsFormPlugin, NgxsFormPluginModule, ResetForm, SetFormDirty, SetFormDisabled, SetFormEnabled, SetFormPristine, UpdateForm, UpdateFormDirty, UpdateFormErrors, UpdateFormStatus, UpdateFormValue, FormDirective as ɵFormDirective };\n"],"names":["i0","Injectable","Directive","Input","NgModule","i1","getActionTypeFromInstance","setValue","getValue","ofActionDispatched","NGXS_PLUGINS","i2","ReactiveFormsModule","Subject","filter","takeUntil","distinctUntilChanged","debounceTime","UpdateFormStatus","constructor","payload","type","UpdateFormValue","UpdateForm","UpdateFormDirty","SetFormDirty","SetFormPristine","UpdateFormErrors","SetFormDisabled","SetFormEnabled","ResetForm","NgxsFormPlugin","handle","state","event","next","nextState","value","payloadValue","Array","isArray","slice","isObjectLike","Object","assign","path","joinPathWithPropertyPath","model","status","errors","dirty","propertyPath","ɵfac","NgxsFormPlugin_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","target","FormDirective","_actions$","_store","_formGroupDirective","_cd","_debounce","_clearDestroy","_updating","_destroy$","debounce","Number","clearDestroy","val","ngOnInit","pipe","action","subscribe","form","reset","updateFormStateWithRawValue","markForCheck","getStateStream","patchValue","markAsDirty","markAsPristine","selectOnce","dispatch","getRawValue","disabled","disable","enable","valueChanges","a","b","JSON","stringify","debounceChange","statusChanges","withFormStatus","control","actions","push","error","complete","ngOnDestroy","skipDebounceTime","updateOn","change","select","FormDirective_Factory","ɵɵdirectiveInject","Actions","Store","FormGroupDirective","ChangeDetectorRef","ɵdir","ɵɵdefineDirective","selectors","inputs","args","selector","NgxsFormPluginModule","forRoot","ngModule","providers","provide","useClass","multi","NgxsFormPluginModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ɵFormDirective"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}