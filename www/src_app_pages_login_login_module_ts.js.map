{"version":3,"file":"src_app_pages_login_login_module_ts.js","mappings":"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","sources":["./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.ts","./src/app/pages/login/login.page.html","./src/app/states/login/index.ts","./src/app/states/login/login.module.ts","./src/app/states/login/login.state.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LoginPageRoutingModule } from './login-routing.module';\nimport { NgxsFormPluginModule } from '@ngxs/form-plugin';\nimport { LoginPage } from './login.page';\nimport { LoginModule as LoginStatesModule } from 'src/app/states/login';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ReactiveFormsModule,\n    LoginStatesModule,\n    NgxsFormPluginModule,\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { FormBuilder, Validators } from '@angular/forms'; //, AbstractControl, ValidatorFn, ValidationErrors \nimport { Store } from '@ngxs/store';\nimport {Login} from 'src/app/actions/login';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss','../register/register.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  loginForm = this.loginFormBuilder.group({\n    email: ['',[Validators.email],],\n    password: ['', [Validators.minLength(6), Validators.maxLength(25)]],\n  },{ });\n  constructor(\n    private Nav: NavController,\n    private readonly loginFormBuilder: FormBuilder,\n    private readonly store: Store\n  ) { }\n\n  get email() {\n    return this.loginForm?.get('email');\n  }\n\n  get password() {\n    return this.loginForm.get('password');\n  }\n\n  userLogin(){\n    if (this.loginForm.valid) {\n      const loginEmail = this.loginForm?.get('email')?.value;\n      const loginPassword = this.loginForm?.get('password')?.value;\n\n      if (loginEmail != null && loginPassword!=null){\n        this.store.dispatch(new Login(loginEmail,loginPassword));\n      }\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"outerContainer\">\n  <div class=\"background-cover\">\n    <ion-img src=\"/assets/Asset 1.png\"></ion-img>\n  </div>\n  <ion-card>\n    \n    <div class=\"inner-container\">\n      <ion-card-title>\n        Sweat<img src=\"/assets/Asset 2.png\" />Session\n      </ion-card-title>\n      <h5>sign in</h5>\n      <ion-text>please sign in to your account</ion-text>\n\n      <form [formGroup]=\"loginForm\"\n      ngxsForm=\"login.loginForm\"\n      (submit)=\"userLogin()\">\n        <ion-item class=\"input-item\">\n          <ion-label position=\"floating\">\n            <ion-icon src=\"/assets/vector-icon.svg\"></ion-icon>\n            Email\n          </ion-label>\n          <ion-input type=\"email\" placeholder=\"Enter your email\"  formControlName=\"email\" required></ion-input>\n        </ion-item>\n\n        <ion-item class=\"input-item\">\n          <ion-label position=\"floating\"> ðŸ”‘Password</ion-label>\n          <ion-input type=\"password\" placeholder=\"Enter your password\"  formControlName=\"password\" required></ion-input>\n        </ion-item>\n\n        <ion-button id=\"loginButton\" expand=\"block\" type=\"submit\">\n            Login\n        </ion-button>\n      </form>\n      \n        <h5 routerLink=\"/register\">Don't have an account?</h5>\n        <h5>Forgot password?</h5>\n    </div>\n  </ion-card>\n</div>\n","export * from './login.module';\nexport * from './login.state';\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NgxsModule } from '@ngxs/store';\nimport { LoginState } from './login.state';\nimport { AuthApi } from 'src/app/states/auth/auth.api';\n\n@NgModule({\n  imports: [CommonModule, NgxsModule.forFeature([LoginState])],\n  //providers: []\n  providers: [AuthApi],\n})\nexport class LoginModule {}\n","import { Injectable } from '@angular/core';\nimport { LoginAuth as AuthActionLogin } from 'src/app/actions/auth';\nimport { Login as LoginAction} from 'src/app/actions/login';\nimport { Action, State, StateContext, Store } from '@ngxs/store';\nimport {AuthApi} from 'src/app/states/auth/auth.api';\n\nexport interface LoginStateModel {\n  loginForm: {\n    model: {\n      email: string | null;\n      password: string | null;\n    };\n\n    modified: boolean; //reg form modified or not\n    status: string; //status of the registration form\n    errors: object; //validation errors\n  };\n}\n\n@State<LoginStateModel>({\n  name: 'loginState',\n  defaults: {\n    loginForm: {\n      model: {\n        email: null,\n        password: null,\n      },\n      modified: false,\n      status: '',\n      errors: {},\n    },\n  },\n})\n\n@Injectable()\nexport class LoginState {\n  constructor(private store: Store, private authApi: AuthApi) {}\n  @Action(LoginAction)\n  async login(context: StateContext<LoginStateModel>, action: LoginAction) {//, email: string, password: string\n    try {\n      const state = context.getState();\n\n      // const regEmail = state.registerForm.model.email;\n      // const regPassword = state.registerForm.model.password;\n      // alert(action.email);\n      // alert(action.password);\n      // alert(\"login.state.ts\");\n      const { email, password } = action;\n      // alert(email);\n      // alert(password);\n      // alert(state.loginForm.model.email);\n      // alert(state.loginForm.model.password);\n      //no need to get cPassword since it should be the same as password\n\n      if (action.email && action.password) {\n        //return context.dispatch(new AuthActionLogin(email, password));\n        return this.authApi.login(email, password);\n      }\n      //return alert(\"Please enter email and/or password\");\n    } catch (error) {\n      return (error as Error).message;//alert((error as Error).message);\n    }\n  }\n}\n"],"names":["RouterModule","LoginPage","routes","path","component","LoginPageRoutingModule","forChild","imports","i1","exports","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","NgxsFormPluginModule","LoginModule","LoginStatesModule","LoginPageModule","declarations","Validators","Login","constructor","Nav","loginFormBuilder","store","loginForm","group","email","password","minLength","maxLength","get","userLogin","valid","loginEmail","value","loginPassword","dispatch","ngOnInit","i0","ÉµÉµdirectiveInject","NavController","i2","FormBuilder","i3","Store","selectors","decls","vars","consts","template","LoginPage_Template","rf","ctx","ÉµÉµelementStart","ÉµÉµelement","ÉµÉµelementEnd","ÉµÉµtext","ÉµÉµlistener","LoginPage_Template_form_submit_13_listener","ÉµÉµadvance","ÉµÉµproperty","NgxsModule","LoginState","AuthApi","forFeature","ÉµNgxsFeatureModule","LoginAction","Action","State","_class","authApi","login","context","action","_this","_asyncToGenerator","state","getState","error","message","ÉµÉµinject","factory","Éµfac","__decorate","name","defaults","model","modified","status","errors"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}