{"version":3,"file":"src_app_pages_setprofile_setprofile_module_ts.js","mappings":"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","sources":["./src/app/directives/backbutton.directive.ts","./src/app/directives/backbutton.module.ts","./src/app/directives/index.ts","./src/app/pages/setprofile/setProfileC/setProfileC.component.ts","./src/app/pages/setprofile/setProfileC/setProfileC.component.html","./src/app/pages/setprofile/setprofile-routing.module.ts","./src/app/pages/setprofile/setprofile.module.ts","./src/app/pages/setprofile/setprofile.page.ts","./src/app/pages/setprofile/setprofile.page.html"],"sourcesContent":["import { Directive, HostListener } from \"@angular/core\";\nimport { NavigationService } from \"../services\";\n \n@Directive({\n  selector: \"[backButton]\",\n})\nexport class BackButtonDirective {\n  constructor(private navigation: NavigationService) {}\n \n  @HostListener(\"click\")\n  onClick(): void {\n    this.navigation.back();\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { BackButtonDirective } from './backbutton.directive';\nimport { IonicModule } from '@ionic/angular';\nimport { BackbuttonComponent } from './backbutton/backbutton.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n  ],\n  declarations: [BackbuttonComponent],\n  exports: [BackbuttonComponent]\n})\nexport class BackButtonDirectiveModule {}\n","export * from \"./backbutton.directive\";\nexport * from \"./backbutton.module\";","import { Component, Input, OnInit } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { GetProfileAction, } from '../../../actions/profile.action';\nimport { IGetProfile,IProfileModel } from '../../../models';\nimport { FormControl, FormGroup ,ReactiveFormsModule,FormsModule} from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { SetProfileService } from 'src/app/services';\nimport { AuthApi } from 'src/app/states/auth/auth.api';\nimport { getCurrentUserId } from 'src/app/actions';\n\n\n@Component({\n  selector: 'app-setprofile-c',\n  templateUrl: './setProfileC.component.html',\n  styleUrls: ['./setProfileC.component.scss'],\n})\n\nexport class SetprofileCComponent  implements OnInit {\n  \n  profileForm = new FormGroup({\n\n    userId: new FormControl(''),\n    name: new FormControl(''),\n    displayName: new FormControl(''),\n    email: new FormControl(''),\n    bio: new FormControl(''),\n    phoneNumber: new FormControl(''),\n    profileURL: new FormControl(''),\n    height: new FormControl(''),\n    weight : new FormControl(''),\n\n  });\n  \n  // ProfilePicture: string = 'assets/img/ProfileSE.png';\n\n  getUser : IGetProfile = {userId: 'na'};\n  UpadateP? : IProfileModel;\n  file: File | null = null;\n  constructor\n  (\n    private store: Store,\n    private modalController: ModalController,\n    private setprofileservices: SetProfileService, \n    private authApi: AuthApi,\n  ){}\n\n    getUserid() {\n      return  this.authApi.getCurrentUserId();\n    }\n\n\n    saveProfile()\n    {\n      this.UpadateP = {\n        userId: this.profileForm.value.userId ?? \"\",\n        name: this.profileForm.value.name ?? \"\",\n        displayName: this.profileForm.value.displayName ?? \"\",\n        email: this.profileForm.value.email ?? \"\",\n        bio: this.profileForm.value.bio ?? \"\",\n        phoneNumber: this.profileForm.value.phoneNumber ?? \"\",\n        profileURL: this.profileForm.value.profileURL ?? \"\",\n        height: this.profileForm.value.height ?? \"\",\n        weight: this.profileForm.value.weight ?? \"\",\n      }\n      this.setprofileservices.updateProfile(this.UpadateP);\n      this.DetailsSaved();\n\n    }\n\n  openPicturePopup()\n  {\n    // this.modalController.create({\n    //   component: 'editPictureModal',\n    //   componentProps: {\n    //     selectedPicture: this.profileForm.get('profileURL')?.value as string,\n    //   },\n    // }).then((modal) => {\n    //   modal.present();\n    // });\n  }\n\n  getDp()\n  {\n    return this.profileForm.get('profileURL')?.value as string; \n  }\n\n  isEditMode = false;\n\n  toggleEditMode() {\n    this.isEditMode = true;\n    //refresh page\n    this.ngOnInit();\n\n  }\n\n  SaveFile() {\n    if (this.file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        this.profileForm.patchValue({ profileURL: reader.result as string});\n        // this. = reader.result as string;\n\n      };\n      reader.readAsDataURL(this.file);\n    }\n\n    console.log(this.profileForm.value.profileURL);\n  }\n\n\n  onFileSelected(event: any) {\n    this.file = event.target.files[0];\n    this.SaveFile();\n\n  }\n  DetailsSaved()\n  {\n    this.isEditMode = false;\n    this.file = null;\n    this.ngOnInit();\n  }\n  ngOnInit()\n  {\n    this.getUserid().then((id) => {\n      this.getUser.userId = id;\n    this.setprofileservices.getProfile(this.getUser).subscribe((profile) => {\n        // this.user = profile.profile.\n        this.profileForm.patchValue(\n          {\n            userId: profile.profile.userId,\n            name: profile.profile.name,\n            displayName: profile.profile.displayName,\n            email: profile.profile.email,\n            bio: profile.profile.bio,\n            phoneNumber: profile.profile.phoneNumber,\n            profileURL: profile.profile.profileURL,\n            height: (profile.profile.height)?.toString(),\n            weight: (profile.profile.weight)?.toString(),\n          },\n\n          );\n\n          if(profile.profile.profileURL == \"\")\n          {\n            this.profileForm.patchValue( {profileURL: 'src/assets/ProfileSE.jpg'});\n          }\n           \n      });\n\n    });\n  }\n\n  takePicture() {\n    document.getElementById('photoInput')?.click();\n  }\n\n  selectFile()\n  {\n    document.getElementById('fileInput')?.click();\n  }\n\n\n}","\n<ion-card>\n      <ion-toast trigger=\"open-toast\" color = \"success\" position = \"top\" message= \"Profile Picture Saved\" [duration]=\"3000\" icon=\"shield-checkmark-outline\"></ion-toast>\n      <ion-toast trigger=\"SDP\" color = \"success\" position = \"top\" message=\"Personal Info Saved\" [duration]=\"3000\" icon=\"shield-checkmark-outline\"></ion-toast>\n\n\n        <ion-row>\n            <ion-col size=\"6\" offset=\"3\">\n                <div class=\"avatar-container\" >\n                    <ion-avatar  class=\"preview-container\" *ngIf=\"getDp()\">\n                        <img [src]=\"getDp()\"  alt=\"Profile Picture\">\n                    </ion-avatar>\n                </div>\n            </ion-col>\n        </ion-row>\n        <ion-row>\n            <ion-col >\n                <input  type=\"file\" id = \"fileInput\" accept=\"image/*\" (change)=\"onFileSelected($event)\" style=\"display: none\">\n                <ion-button fill=\"outline\" expand=\"block\" size=\"small\" (click)=\"selectFile()\" >Change Picture</ion-button>\n            </ion-col>\n            <ion-col >\n                <input type=\"file\" id = \"photoInput\" accept=\"image/*\" capture=\"environment\" (change)=\"onFileSelected($event)\" style=\"display: none\">\n                <ion-button fill=\"outline\" expand=\"block\" size=\"small\"  (click)=\"takePicture()\">Take Picture</ion-button>\n            </ion-col>\n        </ion-row>\n    <ion-row>\n        <ion-col class=\"ion-text-center\">\n            <ion-button fill=\"outline\" id=\"SDP\" expand=\"block\" size=\"small\" (click)=\"saveProfile()\" [disabled]=\"!file\">Save Picture</ion-button>\n        </ion-col>\n    </ion-row>\n\n\n      </ion-card>\n      \n      \n    \n    <ion-card>\n  \n      <ion-button fill = \"clear\" (click)=\"toggleEditMode()\">\n        Edit Profile Info\n      </ion-button>\n      \n      \n      <ion-list>\n          <form [formGroup]=\"profileForm\">\n          <ion-item [disabled] = \"!isEditMode\">\n            <ion-input label=\"Display Name\"  labelPlacement=\"stacked\" type = \"text\" formControlName= \"displayName\" placeholder=\"Enter Display Name\"></ion-input>\n          </ion-item>\n        \n          <ion-item [disabled] = \"!isEditMode\">\n            <ion-input label=\"Name\"  labelPlacement=\"stacked\" type = \"text\" formControlName= \"name\"  placeholder=\"Enter Name\"></ion-input>\n          </ion-item>\n        \n          <ion-item [disabled] = \"!isEditMode\">\n            <ion-input label=\"Bio\"  labelPlacement=\"stacked\" type = \"text\" formControlName= \"bio\" placeholder=\"Enter Bio\"></ion-input>\n          </ion-item>\n\n          <ion-item [disabled] = \"!isEditMode\">\n            <ion-input label=\"Email\"  labelPlacement=\"stacked\" type = \"email\" formControlName= \"email\" placeholder=\"Enter Email\"></ion-input>\n          </ion-item>\n        \n          <ion-item [disabled] = \"!isEditMode\">\n            <ion-input label=\"Phone Number\" labelPlacement=\"stacked\" type = \"text\" formControlName= \"phoneNumber\" placeholder=\"Enter Phone Number\"></ion-input>\n          </ion-item>\n\n          <ion-item [disabled] = \"!isEditMode\">\n            <ion-input label=\"Height (Cm)\"  labelPlacement=\"stacked\" type = \"Number\" formControlName= \"height\" placeholder=\"Enter Height in Cm\"></ion-input>\n          </ion-item>\n\n          <ion-item [disabled] = \"!isEditMode\">\n            <ion-input label=\"Weight (Kg)\"  labelPlacement=\"stacked\" type = \"Number\" formControlName= \"weight\" placeholder=\"Enter Weight in Kg\"></ion-input>\n          </ion-item>\n          \n          <ion-button id=\"open-toast\" expand=\"block\" (click)=\"saveProfile()\" [disabled] = \"!isEditMode\"> Save </ion-button>\n        </form>\n        </ion-list>\n\n\n      \n    </ion-card>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SetprofilePage } from './setprofile.page';\nimport { FormsModule } from '@angular/forms';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SetprofilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes),\n  FormsModule],\n  exports: [RouterModule],\n})\nexport class SetprofilePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { SetprofilePageRoutingModule } from './setprofile-routing.module';\n\nimport { SetprofilePage } from './setprofile.page';\nimport { AuthApi } from 'src/app/states/auth/auth.api';\nimport { SetprofileCComponent } from './setProfileC/setProfileC.component';\nimport { BackButtonDirectiveModule } from 'src/app/directives';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SetprofilePageRoutingModule,\n    ReactiveFormsModule,\n    BackButtonDirectiveModule\n  ],\n  providers: [\n    AuthApi\n  ],\n  declarations: [SetprofilePage,SetprofileCComponent]\n})\nexport class SetprofilePageModule {}\n","import { Component, OnInit,ViewChild  } from '@angular/core';\n//import { profile } from 'console';\nimport { IonContent, ModalController } from '@ionic/angular';\nimport { SetProfileService } from '../../services/setprofile/setprofile.service';\nimport { IProfileModel , IGetProfile , } from 'src/app/models';\nimport { AuthState } from 'src/app/states/auth/auth.state';\nimport {AuthenticationStateModel} from 'src/app/states/auth/auth.state';\nimport { AuthApi } from 'src/app/states/auth/auth.api';\nimport { Select, Store } from '@ngxs/store';\nimport {GetProfileAction} from 'src/app/actions/profile.action';\n\n@Component({\n  selector: 'app-setprofile',\n  templateUrl: './setprofile.page.html',\n  styleUrls: ['./setprofile.page.scss'],\n})\nexport class SetprofilePage implements OnInit {\n\n  \n  // user: IProfileModel = {userId: '123', name: 'Triumph Ndlovu', email: 'TriumphSynapse@gmail.com', bio: 'hiiiiiiiiiiiiiiiiiiii', profileURL: 'https://i.pravatar.cc/150?img=68', phoneNumber: '0123456789'};\n  user! : IProfileModel;\n  getUser : IGetProfile = {userId: 'na'};\n\n  ProfilePicture: string = 'https://i.pravatar.cc/150?img=68'; // for now\n\n  selectedPicture: string | null = null;\n\n  onPictureChange(event: any) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        this.ProfilePicture = reader.result as string;\n\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n\n  saveProfile() {\n \n    this.editMode = false;\n    this.user.profileURL = this.ProfilePicture;\n\n    this.modalController.dismiss('save');\n    console.log('Saving profile:', this.user);\n  }\n\n  savePicture() {\n    // Perform save logic here\n    // this.oldProfilePicture = this.selectedPicture;\n    // SetProfileService.updateProfile(this.user).subscribe((profile) => {\n    //   this.user = profile.profile;\n    // });\n    this.modalController.dismiss('save');\n  }\n  \n  openPicturePopup() {\n    this.modalController.create({\n      component: 'editPictureModal',\n      componentProps: {\n        selectedPicture: this.ProfilePicture,\n      },\n    }).then((modal) => {\n      modal.present();\n    });\n  }\n\n  editMode = false;\n  isEditMode = false;\n\n  enableEditMode() {\n    console.log('Enabling edit mode');\n    this.editMode = true;\n  }\n  \n  closePicturePopup() {\n    this.modalController.dismiss('cancel');\n  }\n\n  temp! : String;\n  constructor(\n    private modalController: ModalController, \n    setprofileservices: SetProfileService, \n    private authApi: AuthApi,\n    private readonly store: Store)//, private ProfileService: ProfileService)\n    {   \n      // this.user = {userId: 'sdHzZS6WSslwe4xo51rK', name: 'no name provided', email: 'no email provided', bio: 'no bio provided', profileURL: 'https://i.pravatar.cc/150?img=68', phoneNumber: '0000000000'};\n      // this.user = {userId: 'abc', name: 'Triumph Ndlovu', email: 'no email provided', bio: 'no bio provided', profileURL: 'https://i.pravatar.cc/150?img=68', phoneNumber: '0000000000'};\n      \n\n    \n      // tempUserID = authApi.getCurrentUserId();\n    \n      // this.getUser.userId =  this.tempUserID.toString();\n        \n      \n      // t = await this.getUserid();\n      \n      // this.getUserid();\n      \n      // setprofileservices.getProfile(this.getUser).subscribe((profile) => {\n      //   this.user = profile.profile;\n      // });\n      \n    }\n    \n    //  getUserid() {\n\n    //   this.getUser.userId = await this.authApi.getCurrentUserId() ?? 'na';\n    //   // alert(\"We got User ==> \" + this.getUser.userId);\n    // }\n\n  \n\n  toggleEditMode() {\n    this.isEditMode = true;\n    console.log('Toggled Edit');\n  }\n\n  isAnyFieldEdited(): boolean {\n    return (\n      this.user.name !== this.user.name ||\n      this.user.bio !== this.user.bio ||\n      this.user.phoneNumber !== this.user.phoneNumber\n    );\n  }\n\n  ngOnInit() {\n    // const userId = '123'; // Replace with the actual user ID\n    // this.pr\n    // (userId).subscribe(userData => {\n    //   console.log('User Data:', userData);\n\n    //   this.user = userData;\n\n    // });\n  }\n }\n"," <ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-item lines=\"none\">\n      <backbutton></backbutton>\n      <ion-title>User</ion-title>\n    </ion-item>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <app-setprofile-c></app-setprofile-c>\n</ion-content>\n\n<!-- <ion-content>\n    <ion-card>\n\n      <ion-card-header>\n        <ion-card-title>Edit Profile</ion-card-title>\n      </ion-card-header>\n       <div class=\"avatar-container\" (click)=\"openPicturePopup()\">\n        <ion-avatar  class=\"preview-container\" *ngIf=\"ProfilePicture\">\n          <img [src]=\"ProfilePicture\" alt=\"Old Profile Picture\">\n        </ion-avatar>\n      </div>\n\n        <ion-input type=\"file\" accept=\"image/*\" (change)=\"onPictureChange($event)\"></ion-input>\n\n      </ion-card>\n      \n      <ion-card>\n        <ion-button fill = \"clear\" (click)=\"toggleEditMode()\">\n          Edit\n        </ion-button> --> \n        \n        <!-- <ion-button slot=\"end\" fill=\"clear\" (click)=\"\">Edit</ion-button> -->\n      <!-- <ion-item> -->\n        <!-- <ion-label position=\"stacked\">Name</ion-label>\n        <ion-input type=\"text\" [(ngModel)]=\"user.name\" [disabled]=\"!isEditMode\"></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label position=\"stacked\">Bio</ion-label>\n        <ion-textarea  [(ngModel)]=\"user.bio\"></ion-textarea>\n      </ion-item>\n\n      <ion-item>\n        <ion-label position=\"stacked\">Phone Number</ion-label>\n        <ion-input type=\"text\"  [(ngModel)]=\"user.phoneNumber\"></ion-input>\n      </ion-item>\n    \n      <ion-item>\n        <ion-label position=\"stacked\">Email</ion-label>\n        <ion-input type=\"email\"  disabled = \"true\" [(ngModel)]=\"user.email\"></ion-input>\n      </ion-item> -->\n    \n      <!-- <ion-item>\n        <ion-label position=\"stacked\">Change Password</ion-label>\n        <ion-input type=\"password\"  [(ngModel)]=\"user.cPassword\"></ion-input>\n      </ion-item> -->\n    \n      <!-- <ion-button expand=\"block\" (click)=\"saveProfile()\" [disabled]=\"!isEditMode\">Save</ion-button>\n    \n    </ion-card> -->\n\n    \n\n    <!-- // will take care of it later -->\n    <!-- <ion-card> -->\n\n      <!-- <app-setprofile-c\n      [user] = \"user\"\n      > \n      </app-setprofile-c> -->\n\n      <!-- <ion-item>\n        <ion-label position=\"stacked\">Change Password</ion-label>\n        <ion-input type=\"password\"  [(ngModel)]=\"user.cPassword\"></ion-input>\n      </ion-item> -->\n\n      <!-- <ion-button expand=\"block\" (click)=\"saveProfile()\">Save</ion-button>\n    \n  </ion-card> -->\n\n<!-- </ion-content> -->\n"],"names":["BackButtonDirective","constructor","navigation","onClick","back","i0","ɵɵdirectiveInject","i1","NavigationService","selectors","hostBindings","BackButtonDirective_HostBindings","rf","ctx","CommonModule","FormsModule","IonicModule","BackbuttonComponent","BackButtonDirectiveModule","declarations","imports","exports","FormControl","FormGroup","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","getDp","ɵɵsanitizeUrl","SetprofileCComponent","store","modalController","setprofileservices","authApi","profileForm","userId","name","displayName","email","bio","phoneNumber","profileURL","height","weight","getUser","file","isEditMode","getUserid","getCurrentUserId","saveProfile","UpadateP","value","updateProfile","DetailsSaved","openPicturePopup","get","toggleEditMode","ngOnInit","SaveFile","reader","FileReader","onloadend","patchValue","result","readAsDataURL","console","log","onFileSelected","event","target","files","then","id","getProfile","subscribe","profile","toString","takePicture","document","getElementById","click","selectFile","Store","i2","ModalController","i3","SetProfileService","i4","AuthApi","decls","vars","consts","template","SetprofileCComponent_Template","ɵɵtemplate","SetprofileCComponent_ion_avatar_6_Template","ɵɵlistener","SetprofileCComponent_Template_input_change_9_listener","$event","SetprofileCComponent_Template_ion_button_click_10_listener","ɵɵtext","SetprofileCComponent_Template_input_change_13_listener","SetprofileCComponent_Template_ion_button_click_14_listener","SetprofileCComponent_Template_ion_button_click_18_listener","SetprofileCComponent_Template_ion_button_click_21_listener","SetprofileCComponent_Template_ion_button_click_39_listener","RouterModule","SetprofilePage","routes","path","component","SetprofilePageRoutingModule","forChild","ReactiveFormsModule","SetprofilePageModule","onPictureChange","ProfilePicture","editMode","user","dismiss","savePicture","create","componentProps","selectedPicture","modal","present","enableEditMode","closePicturePopup","isAnyFieldEdited","SetprofilePage_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}